/*EX1) 'bruce'보다 급여를 많이 받는 사원이름,부서명,급여를 출력하시오.*/
select * from EMPLOYEES;

select e.first_name, d.department_name,e.salary
from employees e, departments d
where e.department_id=d.department_id -- 조인 안 해주면 서브쿼리는 곱관계이므로   엄청나게 출력됨
and e.salary > (
                        select salary
                        from employees
                        where first_name='Bruce'
                        );
                        

/*EX2)부서별로 가장급여를 많이 받는 사원의 이름,급여,부서번호를 출력하시오.*/
SELECT first_name,salary,department_id
from employees e
where salary in (
                        select max(salary)
                        from employees
                        where department_id= e.department_id
                        )
order by department_id;


/*EX3) 30소속된 사원들보다 (급여를 가장 많이 받는 ) ,더 많은 급여를 받는 사원의 이름,급여,입사일을 출력하시오.
(max함수 사용x)*/

select first_name, salary, hire_date
from employees
where salary > all (
                            select salary
                            from employees
                            where department_id=30
                            );
                            

/*EX4) 부서번호가 30번인 사원들이 받는 최저급여 보다 높은 급여를 받는 사원의 이름,급여,입사일을 출력하시오.*/
select first_name,salary,hire_date
from employees
where salary > some (
                                select salary
                                from employees
                                where department_id=30
                                );
                                

/*exists*/ 
select first_name,hire_date,salary,department_id
from employees
where exists ( --20번부서와 조인할값이 있으면 107번까지 모두 출력됨
                    select department_id
                    from employees
                    where department_id=20
                    );
                    

/*EX5) 급여가 가장높은 상위 3명을 검색하시오 (인라인뷰)*/ 
select emp.first_name,emp.salary --emp.*로 표현가능
from(
select first_name,salary
from employees
order by salary desc) emp
where rownum <=3;

/*ex6) 급여가 가장높은 상위 4위부터 8위까지 검색하시오.*/
select emp2.*
from(
            select emp.* ,rownum rn
            from(
                        select first_name,salary
                        from employees
                        order by salary desc) emp) emp2
where emp2.rn>=4 and emp2.rn<= 8;


/*ex7) 업무(job_id)별 평균급여가 가장적은 업무를 찾아 업무와 평균급여를 구하시오.*/
select * from EMPLOYEES;

select job_id, avg(salary) --업무별 평균급여 구해짐
from employees
group by job_id
having avg(salary) =( --그중에서도 가장적은 급여를 받는 업무를 알아내야함
                     select min(avg(salary))
                     from employees
                     group by job_id
                     );


/*ex8) 부하직원이 없는 모든 사원의 이름을 출력하시오.*/
select employee_id, first_name
from employees 
where employee_id not in (
                                    select e.employee_id
                                    from employees m ,employees e
                                    where e.employee_id=m.manager_id
                                    );


/*ex9) rollup함수를 사용하여 부서명과 업무를 집계하고 부서집계을 desk  업무집계를 job이라고한다.
부서명,업무,갯수,합을 구하시오.*/
select case grouping(d.department_name) when 1 then 'desk' else d.department_name end as "부서명",
        case grouping(e.job_id) when 1 then 'job' else e.job_id end as "업무", count(*) , sum(salary)
from employees e, departments d
where e.department_id=d.department_id
group by rollup(d.department_name, e.job_id);




